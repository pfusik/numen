	icl	'../pilot.asx'
	icl	'map.asx'
	icl	'tiles.asx'
	icl	'track.asx'

Duke_DOOR1_WALL1	equ	83
Duke_DOOR1_WALL2	equ	71
Duke_DOOR1_OPEN_Y	equ	$280
Duke_DOOR1_CLOSED_Y	equ	$380
Duke_DOOR2_SECTOR	equ	8

	ift	NUMEN
Math_word	equ	$97
	eif

main
	lda	<Duke_DOOR1_CLOSED_Y
	ldx	>Duke_DOOR1_CLOSED_Y
	jsr	Duke_setDoor1
	mva	World_floorZ+Duke_DOOR2_SECTOR	Duke_door2Bottom
	add	World_ceilingZ+Duke_DOOR2_SECTOR
	ror	@
	sta	World_ceilingZ+Duke_DOOR2_SECTOR
	sta	World_floorZ+Duke_DOOR2_SECTOR
	jmp	Pilot_main

Duke_openDoor1
	mva	#{nop}	Duke_animateUpdate1
	rts

Duke_openDoor2
	mva	#{nop}	Duke_animateUpdate2
; !!! no black screen !!!
	mva	#{cmp ^40}	$1fcf
	rts

Duke_animateUpdate1
	rts

	lda	Time_ticks
	asl	@
	eor	#$ff
	sec
	adc	World_wallY_lo+Duke_DOOR1_WALL1
	ldx	World_wallY_hi+Duke_DOOR1_WALL1
	scs:dex
	cpx	>Duke_DOOR1_OPEN_Y
	ift	<Duke_DOOR1_OPEN_Y!=0
	sne
	cmp	<Duke_DOOR1_OPEN_Y
	eif
	bcs	Duke_setDoor1
	lda	<Duke_DOOR1_OPEN_Y
	ldx	>Duke_DOOR1_OPEN_Y
Duke_setDoor1
	sta	World_wallY_lo+Duke_DOOR1_WALL1
	stx	World_wallY_hi+Duke_DOOR1_WALL1
	sta	World_wallY_lo+Duke_DOOR1_WALL2
	stx	World_wallY_hi+Duke_DOOR1_WALL2
	sta	World_wallY_lo+Duke_DOOR1_WALL2+1
	stx	World_wallY_hi+Duke_DOOR1_WALL2+1

Duke_animateUpdate2
	rts

	lda	Time_ticks
	lsr	@
	sta	Math_word
	add	World_floorZ+Duke_DOOR2_SECTOR
	bcs	Duke_animateUpdate_splitOpened
	cmp	Duke_door2Bottom
	bcs	Duke_animateUpdate_splitOpened
	sta	World_floorZ+Duke_DOOR2_SECTOR
	lda	World_ceilingZ+Duke_DOOR2_SECTOR
	sub	Math_word
	sta	World_ceilingZ+Duke_DOOR2_SECTOR
	rts
Duke_animateUpdate_splitOpened
	lda	World_floorZ+Duke_DOOR2_SECTOR
	sub	Duke_door2Bottom
	add:sta	World_ceilingZ+Duke_DOOR2_SECTOR
	mva	Duke_door2Bottom	World_floorZ+Duke_DOOR2_SECTOR
	rts

Duke_door2Bottom org	*+1

	org	Pilot_update+1
	dta	a(Duke_animateUpdate1)

	end
